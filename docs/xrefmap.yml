### YamlMime:XRefMap
sorted: true
references:
- uid: GlitchedPolygons.RepositoryPattern.SQLite
  name: GlitchedPolygons.RepositoryPattern.SQLite
  href: api/GlitchedPolygons.RepositoryPattern.SQLite.html
  commentId: N:GlitchedPolygons.RepositoryPattern.SQLite
  fullName: GlitchedPolygons.RepositoryPattern.SQLite
  nameWithType: GlitchedPolygons.RepositoryPattern.SQLite
- uid: GlitchedPolygons.RepositoryPattern.SQLite.SQLiteRepository`2
  name: SQLiteRepository<T1, T2>
  href: api/GlitchedPolygons.RepositoryPattern.SQLite.SQLiteRepository-2.html
  commentId: T:GlitchedPolygons.RepositoryPattern.SQLite.SQLiteRepository`2
  name.vb: SQLiteRepository(Of T1, T2)
  fullName: GlitchedPolygons.RepositoryPattern.SQLite.SQLiteRepository<T1, T2>
  fullName.vb: GlitchedPolygons.RepositoryPattern.SQLite.SQLiteRepository(Of T1, T2)
  nameWithType: SQLiteRepository<T1, T2>
  nameWithType.vb: SQLiteRepository(Of T1, T2)
- uid: GlitchedPolygons.RepositoryPattern.SQLite.SQLiteRepository`2.#ctor(System.String,System.String)
  name: SQLiteRepository(String, String)
  href: api/GlitchedPolygons.RepositoryPattern.SQLite.SQLiteRepository-2.html#GlitchedPolygons_RepositoryPattern_SQLite_SQLiteRepository_2__ctor_System_String_System_String_
  commentId: M:GlitchedPolygons.RepositoryPattern.SQLite.SQLiteRepository`2.#ctor(System.String,System.String)
  fullName: GlitchedPolygons.RepositoryPattern.SQLite.SQLiteRepository<T1, T2>.SQLiteRepository(System.String, System.String)
  fullName.vb: GlitchedPolygons.RepositoryPattern.SQLite.SQLiteRepository(Of T1, T2).SQLiteRepository(System.String, System.String)
  nameWithType: SQLiteRepository<T1, T2>.SQLiteRepository(String, String)
  nameWithType.vb: SQLiteRepository(Of T1, T2).SQLiteRepository(String, String)
- uid: GlitchedPolygons.RepositoryPattern.SQLite.SQLiteRepository`2.#ctor*
  name: SQLiteRepository
  href: api/GlitchedPolygons.RepositoryPattern.SQLite.SQLiteRepository-2.html#GlitchedPolygons_RepositoryPattern_SQLite_SQLiteRepository_2__ctor_
  commentId: Overload:GlitchedPolygons.RepositoryPattern.SQLite.SQLiteRepository`2.#ctor
  isSpec: "True"
  fullName: GlitchedPolygons.RepositoryPattern.SQLite.SQLiteRepository<T1, T2>.SQLiteRepository
  fullName.vb: GlitchedPolygons.RepositoryPattern.SQLite.SQLiteRepository(Of T1, T2).SQLiteRepository
  nameWithType: SQLiteRepository<T1, T2>.SQLiteRepository
  nameWithType.vb: SQLiteRepository(Of T1, T2).SQLiteRepository
- uid: GlitchedPolygons.RepositoryPattern.SQLite.SQLiteRepository`2.Add(`0)
  name: Add(T1)
  href: api/GlitchedPolygons.RepositoryPattern.SQLite.SQLiteRepository-2.html#GlitchedPolygons_RepositoryPattern_SQLite_SQLiteRepository_2_Add__0_
  commentId: M:GlitchedPolygons.RepositoryPattern.SQLite.SQLiteRepository`2.Add(`0)
  fullName: GlitchedPolygons.RepositoryPattern.SQLite.SQLiteRepository<T1, T2>.Add(T1)
  fullName.vb: GlitchedPolygons.RepositoryPattern.SQLite.SQLiteRepository(Of T1, T2).Add(T1)
  nameWithType: SQLiteRepository<T1, T2>.Add(T1)
  nameWithType.vb: SQLiteRepository(Of T1, T2).Add(T1)
- uid: GlitchedPolygons.RepositoryPattern.SQLite.SQLiteRepository`2.Add*
  name: Add
  href: api/GlitchedPolygons.RepositoryPattern.SQLite.SQLiteRepository-2.html#GlitchedPolygons_RepositoryPattern_SQLite_SQLiteRepository_2_Add_
  commentId: Overload:GlitchedPolygons.RepositoryPattern.SQLite.SQLiteRepository`2.Add
  isSpec: "True"
  fullName: GlitchedPolygons.RepositoryPattern.SQLite.SQLiteRepository<T1, T2>.Add
  fullName.vb: GlitchedPolygons.RepositoryPattern.SQLite.SQLiteRepository(Of T1, T2).Add
  nameWithType: SQLiteRepository<T1, T2>.Add
  nameWithType.vb: SQLiteRepository(Of T1, T2).Add
- uid: GlitchedPolygons.RepositoryPattern.SQLite.SQLiteRepository`2.AddRange(IEnumerable{`0})
  name: AddRange(IEnumerable<T1>)
  href: api/GlitchedPolygons.RepositoryPattern.SQLite.SQLiteRepository-2.html#GlitchedPolygons_RepositoryPattern_SQLite_SQLiteRepository_2_AddRange_IEnumerable__0__
  commentId: M:GlitchedPolygons.RepositoryPattern.SQLite.SQLiteRepository`2.AddRange(IEnumerable{`0})
  name.vb: AddRange(IEnumerable(Of T1))
  fullName: GlitchedPolygons.RepositoryPattern.SQLite.SQLiteRepository<T1, T2>.AddRange(IEnumerable<T1>)
  fullName.vb: GlitchedPolygons.RepositoryPattern.SQLite.SQLiteRepository(Of T1, T2).AddRange(IEnumerable(Of T1))
  nameWithType: SQLiteRepository<T1, T2>.AddRange(IEnumerable<T1>)
  nameWithType.vb: SQLiteRepository(Of T1, T2).AddRange(IEnumerable(Of T1))
- uid: GlitchedPolygons.RepositoryPattern.SQLite.SQLiteRepository`2.AddRange*
  name: AddRange
  href: api/GlitchedPolygons.RepositoryPattern.SQLite.SQLiteRepository-2.html#GlitchedPolygons_RepositoryPattern_SQLite_SQLiteRepository_2_AddRange_
  commentId: Overload:GlitchedPolygons.RepositoryPattern.SQLite.SQLiteRepository`2.AddRange
  isSpec: "True"
  fullName: GlitchedPolygons.RepositoryPattern.SQLite.SQLiteRepository<T1, T2>.AddRange
  fullName.vb: GlitchedPolygons.RepositoryPattern.SQLite.SQLiteRepository(Of T1, T2).AddRange
  nameWithType: SQLiteRepository<T1, T2>.AddRange
  nameWithType.vb: SQLiteRepository(Of T1, T2).AddRange
- uid: GlitchedPolygons.RepositoryPattern.SQLite.SQLiteRepository`2.Find(Expression{Func{`0,System.Boolean}})
  name: Find(Expression<Func<T1, Boolean>>)
  href: api/GlitchedPolygons.RepositoryPattern.SQLite.SQLiteRepository-2.html#GlitchedPolygons_RepositoryPattern_SQLite_SQLiteRepository_2_Find_Expression_Func__0_System_Boolean___
  commentId: M:GlitchedPolygons.RepositoryPattern.SQLite.SQLiteRepository`2.Find(Expression{Func{`0,System.Boolean}})
  name.vb: Find(Expression(Of Func(Of T1, Boolean)))
  fullName: GlitchedPolygons.RepositoryPattern.SQLite.SQLiteRepository<T1, T2>.Find(Expression<Func<T1, System.Boolean>>)
  fullName.vb: GlitchedPolygons.RepositoryPattern.SQLite.SQLiteRepository(Of T1, T2).Find(Expression(Of Func(Of T1, System.Boolean)))
  nameWithType: SQLiteRepository<T1, T2>.Find(Expression<Func<T1, Boolean>>)
  nameWithType.vb: SQLiteRepository(Of T1, T2).Find(Expression(Of Func(Of T1, Boolean)))
- uid: GlitchedPolygons.RepositoryPattern.SQLite.SQLiteRepository`2.Find*
  name: Find
  href: api/GlitchedPolygons.RepositoryPattern.SQLite.SQLiteRepository-2.html#GlitchedPolygons_RepositoryPattern_SQLite_SQLiteRepository_2_Find_
  commentId: Overload:GlitchedPolygons.RepositoryPattern.SQLite.SQLiteRepository`2.Find
  isSpec: "True"
  fullName: GlitchedPolygons.RepositoryPattern.SQLite.SQLiteRepository<T1, T2>.Find
  fullName.vb: GlitchedPolygons.RepositoryPattern.SQLite.SQLiteRepository(Of T1, T2).Find
  nameWithType: SQLiteRepository<T1, T2>.Find
  nameWithType.vb: SQLiteRepository(Of T1, T2).Find
- uid: GlitchedPolygons.RepositoryPattern.SQLite.SQLiteRepository`2.Get(`1)
  name: Get(T2)
  href: api/GlitchedPolygons.RepositoryPattern.SQLite.SQLiteRepository-2.html#GlitchedPolygons_RepositoryPattern_SQLite_SQLiteRepository_2_Get__1_
  commentId: M:GlitchedPolygons.RepositoryPattern.SQLite.SQLiteRepository`2.Get(`1)
  fullName: GlitchedPolygons.RepositoryPattern.SQLite.SQLiteRepository<T1, T2>.Get(T2)
  fullName.vb: GlitchedPolygons.RepositoryPattern.SQLite.SQLiteRepository(Of T1, T2).Get(T2)
  nameWithType: SQLiteRepository<T1, T2>.Get(T2)
  nameWithType.vb: SQLiteRepository(Of T1, T2).Get(T2)
- uid: GlitchedPolygons.RepositoryPattern.SQLite.SQLiteRepository`2.Get*
  name: Get
  href: api/GlitchedPolygons.RepositoryPattern.SQLite.SQLiteRepository-2.html#GlitchedPolygons_RepositoryPattern_SQLite_SQLiteRepository_2_Get_
  commentId: Overload:GlitchedPolygons.RepositoryPattern.SQLite.SQLiteRepository`2.Get
  isSpec: "True"
  fullName: GlitchedPolygons.RepositoryPattern.SQLite.SQLiteRepository<T1, T2>.Get
  fullName.vb: GlitchedPolygons.RepositoryPattern.SQLite.SQLiteRepository(Of T1, T2).Get
  nameWithType: SQLiteRepository<T1, T2>.Get
  nameWithType.vb: SQLiteRepository(Of T1, T2).Get
- uid: GlitchedPolygons.RepositoryPattern.SQLite.SQLiteRepository`2.GetAll
  name: GetAll()
  href: api/GlitchedPolygons.RepositoryPattern.SQLite.SQLiteRepository-2.html#GlitchedPolygons_RepositoryPattern_SQLite_SQLiteRepository_2_GetAll
  commentId: M:GlitchedPolygons.RepositoryPattern.SQLite.SQLiteRepository`2.GetAll
  fullName: GlitchedPolygons.RepositoryPattern.SQLite.SQLiteRepository<T1, T2>.GetAll()
  fullName.vb: GlitchedPolygons.RepositoryPattern.SQLite.SQLiteRepository(Of T1, T2).GetAll()
  nameWithType: SQLiteRepository<T1, T2>.GetAll()
  nameWithType.vb: SQLiteRepository(Of T1, T2).GetAll()
- uid: GlitchedPolygons.RepositoryPattern.SQLite.SQLiteRepository`2.GetAll*
  name: GetAll
  href: api/GlitchedPolygons.RepositoryPattern.SQLite.SQLiteRepository-2.html#GlitchedPolygons_RepositoryPattern_SQLite_SQLiteRepository_2_GetAll_
  commentId: Overload:GlitchedPolygons.RepositoryPattern.SQLite.SQLiteRepository`2.GetAll
  isSpec: "True"
  fullName: GlitchedPolygons.RepositoryPattern.SQLite.SQLiteRepository<T1, T2>.GetAll
  fullName.vb: GlitchedPolygons.RepositoryPattern.SQLite.SQLiteRepository(Of T1, T2).GetAll
  nameWithType: SQLiteRepository<T1, T2>.GetAll
  nameWithType.vb: SQLiteRepository(Of T1, T2).GetAll
- uid: GlitchedPolygons.RepositoryPattern.SQLite.SQLiteRepository`2.Item(`1)
  name: Item[T2]
  href: api/GlitchedPolygons.RepositoryPattern.SQLite.SQLiteRepository-2.html#GlitchedPolygons_RepositoryPattern_SQLite_SQLiteRepository_2_Item__1_
  commentId: P:GlitchedPolygons.RepositoryPattern.SQLite.SQLiteRepository`2.Item(`1)
  name.vb: Item(T2)
  fullName: GlitchedPolygons.RepositoryPattern.SQLite.SQLiteRepository<T1, T2>.Item[T2]
  fullName.vb: GlitchedPolygons.RepositoryPattern.SQLite.SQLiteRepository(Of T1, T2).Item(T2)
  nameWithType: SQLiteRepository<T1, T2>.Item[T2]
  nameWithType.vb: SQLiteRepository(Of T1, T2).Item(T2)
- uid: GlitchedPolygons.RepositoryPattern.SQLite.SQLiteRepository`2.Item*
  name: Item
  href: api/GlitchedPolygons.RepositoryPattern.SQLite.SQLiteRepository-2.html#GlitchedPolygons_RepositoryPattern_SQLite_SQLiteRepository_2_Item_
  commentId: Overload:GlitchedPolygons.RepositoryPattern.SQLite.SQLiteRepository`2.Item
  isSpec: "True"
  fullName: GlitchedPolygons.RepositoryPattern.SQLite.SQLiteRepository<T1, T2>.Item
  fullName.vb: GlitchedPolygons.RepositoryPattern.SQLite.SQLiteRepository(Of T1, T2).Item
  nameWithType: SQLiteRepository<T1, T2>.Item
  nameWithType.vb: SQLiteRepository(Of T1, T2).Item
- uid: GlitchedPolygons.RepositoryPattern.SQLite.SQLiteRepository`2.OpenConnection
  name: OpenConnection()
  href: api/GlitchedPolygons.RepositoryPattern.SQLite.SQLiteRepository-2.html#GlitchedPolygons_RepositoryPattern_SQLite_SQLiteRepository_2_OpenConnection
  commentId: M:GlitchedPolygons.RepositoryPattern.SQLite.SQLiteRepository`2.OpenConnection
  fullName: GlitchedPolygons.RepositoryPattern.SQLite.SQLiteRepository<T1, T2>.OpenConnection()
  fullName.vb: GlitchedPolygons.RepositoryPattern.SQLite.SQLiteRepository(Of T1, T2).OpenConnection()
  nameWithType: SQLiteRepository<T1, T2>.OpenConnection()
  nameWithType.vb: SQLiteRepository(Of T1, T2).OpenConnection()
- uid: GlitchedPolygons.RepositoryPattern.SQLite.SQLiteRepository`2.OpenConnection*
  name: OpenConnection
  href: api/GlitchedPolygons.RepositoryPattern.SQLite.SQLiteRepository-2.html#GlitchedPolygons_RepositoryPattern_SQLite_SQLiteRepository_2_OpenConnection_
  commentId: Overload:GlitchedPolygons.RepositoryPattern.SQLite.SQLiteRepository`2.OpenConnection
  isSpec: "True"
  fullName: GlitchedPolygons.RepositoryPattern.SQLite.SQLiteRepository<T1, T2>.OpenConnection
  fullName.vb: GlitchedPolygons.RepositoryPattern.SQLite.SQLiteRepository(Of T1, T2).OpenConnection
  nameWithType: SQLiteRepository<T1, T2>.OpenConnection
  nameWithType.vb: SQLiteRepository(Of T1, T2).OpenConnection
- uid: GlitchedPolygons.RepositoryPattern.SQLite.SQLiteRepository`2.Remove(`0)
  name: Remove(T1)
  href: api/GlitchedPolygons.RepositoryPattern.SQLite.SQLiteRepository-2.html#GlitchedPolygons_RepositoryPattern_SQLite_SQLiteRepository_2_Remove__0_
  commentId: M:GlitchedPolygons.RepositoryPattern.SQLite.SQLiteRepository`2.Remove(`0)
  fullName: GlitchedPolygons.RepositoryPattern.SQLite.SQLiteRepository<T1, T2>.Remove(T1)
  fullName.vb: GlitchedPolygons.RepositoryPattern.SQLite.SQLiteRepository(Of T1, T2).Remove(T1)
  nameWithType: SQLiteRepository<T1, T2>.Remove(T1)
  nameWithType.vb: SQLiteRepository(Of T1, T2).Remove(T1)
- uid: GlitchedPolygons.RepositoryPattern.SQLite.SQLiteRepository`2.Remove(`1)
  name: Remove(T2)
  href: api/GlitchedPolygons.RepositoryPattern.SQLite.SQLiteRepository-2.html#GlitchedPolygons_RepositoryPattern_SQLite_SQLiteRepository_2_Remove__1_
  commentId: M:GlitchedPolygons.RepositoryPattern.SQLite.SQLiteRepository`2.Remove(`1)
  fullName: GlitchedPolygons.RepositoryPattern.SQLite.SQLiteRepository<T1, T2>.Remove(T2)
  fullName.vb: GlitchedPolygons.RepositoryPattern.SQLite.SQLiteRepository(Of T1, T2).Remove(T2)
  nameWithType: SQLiteRepository<T1, T2>.Remove(T2)
  nameWithType.vb: SQLiteRepository(Of T1, T2).Remove(T2)
- uid: GlitchedPolygons.RepositoryPattern.SQLite.SQLiteRepository`2.Remove*
  name: Remove
  href: api/GlitchedPolygons.RepositoryPattern.SQLite.SQLiteRepository-2.html#GlitchedPolygons_RepositoryPattern_SQLite_SQLiteRepository_2_Remove_
  commentId: Overload:GlitchedPolygons.RepositoryPattern.SQLite.SQLiteRepository`2.Remove
  isSpec: "True"
  fullName: GlitchedPolygons.RepositoryPattern.SQLite.SQLiteRepository<T1, T2>.Remove
  fullName.vb: GlitchedPolygons.RepositoryPattern.SQLite.SQLiteRepository(Of T1, T2).Remove
  nameWithType: SQLiteRepository<T1, T2>.Remove
  nameWithType.vb: SQLiteRepository(Of T1, T2).Remove
- uid: GlitchedPolygons.RepositoryPattern.SQLite.SQLiteRepository`2.RemoveAll
  name: RemoveAll()
  href: api/GlitchedPolygons.RepositoryPattern.SQLite.SQLiteRepository-2.html#GlitchedPolygons_RepositoryPattern_SQLite_SQLiteRepository_2_RemoveAll
  commentId: M:GlitchedPolygons.RepositoryPattern.SQLite.SQLiteRepository`2.RemoveAll
  fullName: GlitchedPolygons.RepositoryPattern.SQLite.SQLiteRepository<T1, T2>.RemoveAll()
  fullName.vb: GlitchedPolygons.RepositoryPattern.SQLite.SQLiteRepository(Of T1, T2).RemoveAll()
  nameWithType: SQLiteRepository<T1, T2>.RemoveAll()
  nameWithType.vb: SQLiteRepository(Of T1, T2).RemoveAll()
- uid: GlitchedPolygons.RepositoryPattern.SQLite.SQLiteRepository`2.RemoveAll*
  name: RemoveAll
  href: api/GlitchedPolygons.RepositoryPattern.SQLite.SQLiteRepository-2.html#GlitchedPolygons_RepositoryPattern_SQLite_SQLiteRepository_2_RemoveAll_
  commentId: Overload:GlitchedPolygons.RepositoryPattern.SQLite.SQLiteRepository`2.RemoveAll
  isSpec: "True"
  fullName: GlitchedPolygons.RepositoryPattern.SQLite.SQLiteRepository<T1, T2>.RemoveAll
  fullName.vb: GlitchedPolygons.RepositoryPattern.SQLite.SQLiteRepository(Of T1, T2).RemoveAll
  nameWithType: SQLiteRepository<T1, T2>.RemoveAll
  nameWithType.vb: SQLiteRepository(Of T1, T2).RemoveAll
- uid: GlitchedPolygons.RepositoryPattern.SQLite.SQLiteRepository`2.RemoveRange(Expression{Func{`0,System.Boolean}})
  name: RemoveRange(Expression<Func<T1, Boolean>>)
  href: api/GlitchedPolygons.RepositoryPattern.SQLite.SQLiteRepository-2.html#GlitchedPolygons_RepositoryPattern_SQLite_SQLiteRepository_2_RemoveRange_Expression_Func__0_System_Boolean___
  commentId: M:GlitchedPolygons.RepositoryPattern.SQLite.SQLiteRepository`2.RemoveRange(Expression{Func{`0,System.Boolean}})
  name.vb: RemoveRange(Expression(Of Func(Of T1, Boolean)))
  fullName: GlitchedPolygons.RepositoryPattern.SQLite.SQLiteRepository<T1, T2>.RemoveRange(Expression<Func<T1, System.Boolean>>)
  fullName.vb: GlitchedPolygons.RepositoryPattern.SQLite.SQLiteRepository(Of T1, T2).RemoveRange(Expression(Of Func(Of T1, System.Boolean)))
  nameWithType: SQLiteRepository<T1, T2>.RemoveRange(Expression<Func<T1, Boolean>>)
  nameWithType.vb: SQLiteRepository(Of T1, T2).RemoveRange(Expression(Of Func(Of T1, Boolean)))
- uid: GlitchedPolygons.RepositoryPattern.SQLite.SQLiteRepository`2.RemoveRange(IEnumerable{`0})
  name: RemoveRange(IEnumerable<T1>)
  href: api/GlitchedPolygons.RepositoryPattern.SQLite.SQLiteRepository-2.html#GlitchedPolygons_RepositoryPattern_SQLite_SQLiteRepository_2_RemoveRange_IEnumerable__0__
  commentId: M:GlitchedPolygons.RepositoryPattern.SQLite.SQLiteRepository`2.RemoveRange(IEnumerable{`0})
  name.vb: RemoveRange(IEnumerable(Of T1))
  fullName: GlitchedPolygons.RepositoryPattern.SQLite.SQLiteRepository<T1, T2>.RemoveRange(IEnumerable<T1>)
  fullName.vb: GlitchedPolygons.RepositoryPattern.SQLite.SQLiteRepository(Of T1, T2).RemoveRange(IEnumerable(Of T1))
  nameWithType: SQLiteRepository<T1, T2>.RemoveRange(IEnumerable<T1>)
  nameWithType.vb: SQLiteRepository(Of T1, T2).RemoveRange(IEnumerable(Of T1))
- uid: GlitchedPolygons.RepositoryPattern.SQLite.SQLiteRepository`2.RemoveRange(IEnumerable{`1})
  name: RemoveRange(IEnumerable<T2>)
  href: api/GlitchedPolygons.RepositoryPattern.SQLite.SQLiteRepository-2.html#GlitchedPolygons_RepositoryPattern_SQLite_SQLiteRepository_2_RemoveRange_IEnumerable__1__
  commentId: M:GlitchedPolygons.RepositoryPattern.SQLite.SQLiteRepository`2.RemoveRange(IEnumerable{`1})
  name.vb: RemoveRange(IEnumerable(Of T2))
  fullName: GlitchedPolygons.RepositoryPattern.SQLite.SQLiteRepository<T1, T2>.RemoveRange(IEnumerable<T2>)
  fullName.vb: GlitchedPolygons.RepositoryPattern.SQLite.SQLiteRepository(Of T1, T2).RemoveRange(IEnumerable(Of T2))
  nameWithType: SQLiteRepository<T1, T2>.RemoveRange(IEnumerable<T2>)
  nameWithType.vb: SQLiteRepository(Of T1, T2).RemoveRange(IEnumerable(Of T2))
- uid: GlitchedPolygons.RepositoryPattern.SQLite.SQLiteRepository`2.RemoveRange*
  name: RemoveRange
  href: api/GlitchedPolygons.RepositoryPattern.SQLite.SQLiteRepository-2.html#GlitchedPolygons_RepositoryPattern_SQLite_SQLiteRepository_2_RemoveRange_
  commentId: Overload:GlitchedPolygons.RepositoryPattern.SQLite.SQLiteRepository`2.RemoveRange
  isSpec: "True"
  fullName: GlitchedPolygons.RepositoryPattern.SQLite.SQLiteRepository<T1, T2>.RemoveRange
  fullName.vb: GlitchedPolygons.RepositoryPattern.SQLite.SQLiteRepository(Of T1, T2).RemoveRange
  nameWithType: SQLiteRepository<T1, T2>.RemoveRange
  nameWithType.vb: SQLiteRepository(Of T1, T2).RemoveRange
- uid: GlitchedPolygons.RepositoryPattern.SQLite.SQLiteRepository`2.SingleOrDefault(Expression{Func{`0,System.Boolean}})
  name: SingleOrDefault(Expression<Func<T1, Boolean>>)
  href: api/GlitchedPolygons.RepositoryPattern.SQLite.SQLiteRepository-2.html#GlitchedPolygons_RepositoryPattern_SQLite_SQLiteRepository_2_SingleOrDefault_Expression_Func__0_System_Boolean___
  commentId: M:GlitchedPolygons.RepositoryPattern.SQLite.SQLiteRepository`2.SingleOrDefault(Expression{Func{`0,System.Boolean}})
  name.vb: SingleOrDefault(Expression(Of Func(Of T1, Boolean)))
  fullName: GlitchedPolygons.RepositoryPattern.SQLite.SQLiteRepository<T1, T2>.SingleOrDefault(Expression<Func<T1, System.Boolean>>)
  fullName.vb: GlitchedPolygons.RepositoryPattern.SQLite.SQLiteRepository(Of T1, T2).SingleOrDefault(Expression(Of Func(Of T1, System.Boolean)))
  nameWithType: SQLiteRepository<T1, T2>.SingleOrDefault(Expression<Func<T1, Boolean>>)
  nameWithType.vb: SQLiteRepository(Of T1, T2).SingleOrDefault(Expression(Of Func(Of T1, Boolean)))
- uid: GlitchedPolygons.RepositoryPattern.SQLite.SQLiteRepository`2.SingleOrDefault*
  name: SingleOrDefault
  href: api/GlitchedPolygons.RepositoryPattern.SQLite.SQLiteRepository-2.html#GlitchedPolygons_RepositoryPattern_SQLite_SQLiteRepository_2_SingleOrDefault_
  commentId: Overload:GlitchedPolygons.RepositoryPattern.SQLite.SQLiteRepository`2.SingleOrDefault
  isSpec: "True"
  fullName: GlitchedPolygons.RepositoryPattern.SQLite.SQLiteRepository<T1, T2>.SingleOrDefault
  fullName.vb: GlitchedPolygons.RepositoryPattern.SQLite.SQLiteRepository(Of T1, T2).SingleOrDefault
  nameWithType: SQLiteRepository<T1, T2>.SingleOrDefault
  nameWithType.vb: SQLiteRepository(Of T1, T2).SingleOrDefault
- uid: GlitchedPolygons.RepositoryPattern.SQLite.SQLiteRepository`2.TableName
  name: TableName
  href: api/GlitchedPolygons.RepositoryPattern.SQLite.SQLiteRepository-2.html#GlitchedPolygons_RepositoryPattern_SQLite_SQLiteRepository_2_TableName
  commentId: P:GlitchedPolygons.RepositoryPattern.SQLite.SQLiteRepository`2.TableName
  fullName: GlitchedPolygons.RepositoryPattern.SQLite.SQLiteRepository<T1, T2>.TableName
  fullName.vb: GlitchedPolygons.RepositoryPattern.SQLite.SQLiteRepository(Of T1, T2).TableName
  nameWithType: SQLiteRepository<T1, T2>.TableName
  nameWithType.vb: SQLiteRepository(Of T1, T2).TableName
- uid: GlitchedPolygons.RepositoryPattern.SQLite.SQLiteRepository`2.TableName*
  name: TableName
  href: api/GlitchedPolygons.RepositoryPattern.SQLite.SQLiteRepository-2.html#GlitchedPolygons_RepositoryPattern_SQLite_SQLiteRepository_2_TableName_
  commentId: Overload:GlitchedPolygons.RepositoryPattern.SQLite.SQLiteRepository`2.TableName
  isSpec: "True"
  fullName: GlitchedPolygons.RepositoryPattern.SQLite.SQLiteRepository<T1, T2>.TableName
  fullName.vb: GlitchedPolygons.RepositoryPattern.SQLite.SQLiteRepository(Of T1, T2).TableName
  nameWithType: SQLiteRepository<T1, T2>.TableName
  nameWithType.vb: SQLiteRepository(Of T1, T2).TableName
- uid: GlitchedPolygons.RepositoryPattern.SQLite.SQLiteRepository`2.Update(`0)
  name: Update(T1)
  href: api/GlitchedPolygons.RepositoryPattern.SQLite.SQLiteRepository-2.html#GlitchedPolygons_RepositoryPattern_SQLite_SQLiteRepository_2_Update__0_
  commentId: M:GlitchedPolygons.RepositoryPattern.SQLite.SQLiteRepository`2.Update(`0)
  fullName: GlitchedPolygons.RepositoryPattern.SQLite.SQLiteRepository<T1, T2>.Update(T1)
  fullName.vb: GlitchedPolygons.RepositoryPattern.SQLite.SQLiteRepository(Of T1, T2).Update(T1)
  nameWithType: SQLiteRepository<T1, T2>.Update(T1)
  nameWithType.vb: SQLiteRepository(Of T1, T2).Update(T1)
- uid: GlitchedPolygons.RepositoryPattern.SQLite.SQLiteRepository`2.Update*
  name: Update
  href: api/GlitchedPolygons.RepositoryPattern.SQLite.SQLiteRepository-2.html#GlitchedPolygons_RepositoryPattern_SQLite_SQLiteRepository_2_Update_
  commentId: Overload:GlitchedPolygons.RepositoryPattern.SQLite.SQLiteRepository`2.Update
  isSpec: "True"
  fullName: GlitchedPolygons.RepositoryPattern.SQLite.SQLiteRepository<T1, T2>.Update
  fullName.vb: GlitchedPolygons.RepositoryPattern.SQLite.SQLiteRepository(Of T1, T2).Update
  nameWithType: SQLiteRepository<T1, T2>.Update
  nameWithType.vb: SQLiteRepository(Of T1, T2).Update
